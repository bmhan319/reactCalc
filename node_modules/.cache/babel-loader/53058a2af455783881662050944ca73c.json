{"ast":null,"code":"var _jsxFileName = \"/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js\";\nimport React, { Component } from 'react';\n\nclass Calculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: 0\n    };\n    this.firstNum = \"\";\n    this.secondNum = \"\";\n    this.convertNum = true;\n    this.isFirstExpr = true;\n    this.equation = \"\";\n    this.symbol = \"\";\n\n    this.submit = num => {\n      let regex = /[-+*\\/]/;\n      let result1 = num.match(regex);\n      let result2 = num.match(regex);\n\n      if (this.isFirstExpr) {\n        if (result1 == null) {\n          this.firstNum = \"\" + this.firstNum + num;\n          this.setState({\n            display: this.firstNum\n          });\n        }\n      }\n\n      if (this.isFirstExpr == false) {\n        if (result2 == null) {\n          this.secondNum = \"\" + this.secondNum + num;\n          this.setState({\n            display: this.firstNum + this.symbol + this.secondNum\n          });\n        }\n\n        this.isFirstExpr = false;\n      }\n\n      this.equation = this.firstNum + this.symbol + this.secondNum;\n    };\n\n    this.handleClear = () => {\n      this.firstNum = \"\";\n      this.setState({\n        display: 0\n      });\n    };\n\n    this.handleConvert = () => {\n      let convert = parseFloat(this.firstNum);\n\n      if (this.convertNum == true) {\n        let toNeg = -Math.abs(convert);\n        toNeg = toNeg.toString();\n        this.convertNum = false;\n        this.firstNum = toNeg;\n        this.setState({\n          display: this.firstNum\n        });\n      } else {\n        let toPos = Math.abs(convert);\n        toPos = toPos.toString();\n        this.convertNum = true;\n        this.firstNum = toPos;\n        this.setState({\n          display: this.firstNum\n        });\n      }\n    };\n\n    this.handlePercent = () => {\n      let convert = parseFloat(this.firstNum);\n      let percent = convert / 100;\n      percent = percent.toString();\n      this.firstNum = percent;\n      this.setState({\n        display: this.firstNum\n      });\n    };\n\n    this.handleEqual = () => {\n      let result = eval(this.equation);\n      this.setState({\n        display: result\n      });\n      this.firstNum = result;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calc-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.display)), React.createElement(\"button\", {\n      onClick: this.handleClear,\n      className: \"button text dark-grey clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      className: \"button text dark-grey negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"+/-\"), React.createElement(\"button\", {\n      onClick: this.handlePercent,\n      className: \"button text dark-grey percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"/\");\n      },\n      className: \"button text orange divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"/\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"7\");\n      },\n      className: \"button text light-grey seven\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"8\");\n      },\n      className: \"button text light-grey eight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"9\");\n      },\n      className: \"button text light-grey nine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"*\");\n      },\n      className: \"button text orange multiply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"4\");\n      },\n      className: \"button text light-grey four\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"5\");\n      },\n      className: \"button text light-grey five\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"6\");\n      },\n      className: \"button text light-grey six\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"-\");\n      },\n      className: \"button text orange subtract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"1\");\n      },\n      className: \"button text light-grey one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"2\");\n      },\n      className: \"button text light-grey two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"3\");\n      },\n      className: \"button text light-grey three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"+\");\n      },\n      className: \"button text orange add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"0\");\n      },\n      className: \"text light-grey zero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\".\");\n      },\n      className: \"button text light-grey decimal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \".\"), React.createElement(\"button\", {\n      onClick: this.handleEqual,\n      className: \"button text orange equals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"=\"));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js"],"names":["React","Component","Calculator","state","display","firstNum","secondNum","convertNum","isFirstExpr","equation","symbol","submit","num","regex","result1","match","result2","setState","handleClear","handleConvert","convert","parseFloat","toNeg","Math","abs","toString","toPos","handlePercent","percent","handleEqual","result","eval","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass Calculator extends Component {\n  state = {\n    display: 0\n  }\n\n  firstNum = \"\"\n  secondNum = \"\"\n  convertNum = true\n  isFirstExpr = true\n  equation = \"\"\n  symbol = \"\"\n\n  submit = (num) => {\n    let regex = /[-+*\\/]/\n    let result1 = num.match(regex)\n    let result2 = num.match(regex)\n    \n    if (this.isFirstExpr) {\n      if (result1 == null) {\n        this.firstNum = \"\" + this.firstNum + num\n        this.setState({\n          display: this.firstNum,\n        })\n      } \n    }\n\n    if (this.isFirstExpr == false) {\n      if (result2 == null) {\n        this.secondNum = \"\" + this.secondNum + num\n        this.setState({\n          display: this.firstNum + this.symbol + this.secondNum,\n        })\n      }   \n      this.isFirstExpr = false;\n    }\n    this.equation = this.firstNum + this.symbol + this.secondNum\n  }  \n\n  handleClear  = () => {\n    this.firstNum = \"\"\n    this.setState({\n      display: 0\n    })\n  }\n\n  handleConvert = () => {\n    let  convert = parseFloat(this.firstNum)\n    if (this.convertNum == true) {\n      let toNeg = -Math.abs(convert)\n      toNeg = toNeg.toString()\n      this.convertNum = false\n      this.firstNum = toNeg\n      this.setState({\n        display: this.firstNum\n      })\n    } else {\n      let toPos = Math.abs(convert)\n      toPos = toPos.toString()\n      this.convertNum = true\n      this.firstNum = toPos\n      this.setState({\n        display: this.firstNum\n      })\n    }    \n  }\n\n  handlePercent = () => {\n    let convert = parseFloat(this.firstNum)\n    let percent = convert / 100\n    percent = percent.toString()\n    this.firstNum = percent\n    this.setState({\n      display: this.firstNum\n    })\n  }\n\n  handleEqual = () => {\n    let result = eval(this.equation)\n    this.setState({\n      display: result\n    })\n    this.firstNum = result\n  }\n  \n\n  render() {\n    return(\n      <div className=\"calc-container\">\n        <div className=\"display\">\n          <p>{this.state.display}</p>\n        </div>\n        <button onClick={this.handleClear} className=\"button text dark-grey clear\">C</button>\n        <button onClick={this.handleConvert} className=\"button text dark-grey negative\">+/-</button>\n        <button onClick={this.handlePercent} className=\"button text dark-grey percent\">%</button>\n        <button onClick={() => {this.submit(\"/\")}} className=\"button text orange divide\">/</button>\n        <button onClick={() => {this.submit(\"7\")}} className=\"button text light-grey seven\">7</button>\n        <button onClick={() => {this.submit(\"8\")}} className=\"button text light-grey eight\">8</button>\n        <button onClick={() => {this.submit(\"9\")}} className=\"button text light-grey nine\">9</button>\n        <button onClick={() => {this.submit(\"*\")}} className=\"button text orange multiply\">X</button>\n        <button onClick={() => {this.submit(\"4\")}} className=\"button text light-grey four\">4</button>\n        <button onClick={() => {this.submit(\"5\")}} className=\"button text light-grey five\">5</button>\n        <button onClick={() => {this.submit(\"6\")}} className=\"button text light-grey six\">6</button>\n        <button onClick={() => {this.submit(\"-\")}} className=\"button text orange subtract\">-</button>\n        <button onClick={() => {this.submit(\"1\")}} className=\"button text light-grey one\">1</button>\n        <button onClick={() => {this.submit(\"2\")}} className=\"button text light-grey two\">2</button>\n        <button onClick={() => {this.submit(\"3\")}} className=\"button text light-grey three\">3</button>\n        <button onClick={() => {this.submit(\"+\")}} className=\"button text orange add\">+</button>\n        <button onClick={() => {this.submit(\"0\")}} className=\"text light-grey zero\">0</button>\n        <button onClick={() => {this.submit(\".\")}} className=\"button text light-grey decimal\">.</button>\n        <button onClick={this.handleEqual} className=\"button text orange equals\">=</button>\n      </div>\n    )\n  }\n}\n\n  \nexport default Calculator\n\n"]},"metadata":{},"sourceType":"module"}