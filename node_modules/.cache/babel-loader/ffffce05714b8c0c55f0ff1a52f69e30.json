{"ast":null,"code":"var _jsxFileName = \"/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js\";\nimport React, { Component } from 'react';\n\nclass Calculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: 0,\n      equation: \"\"\n    };\n    this.firstNum = \"\";\n    this.secondNum = \"\";\n    this.convertNum = true;\n    this.isFirstExpr = true;\n    this.equation = \"q\";\n    this.symbol = \"\";\n\n    this.submit = num => {\n      let regex = /[-+*\\/]/;\n      let firstNumber = num.toString();\n      let secondNumber = num.toString();\n      let result1 = firstNumber.match(regex);\n      let result2 = secondNumber.match(regex);\n\n      if (this.isFirstExpr) {\n        if (result1 == null) {\n          this.firstNum = \"\" + this.firstNum + num;\n          this.setState({\n            display: this.firstNum\n          });\n        } else if (result1 !== null) {\n          this.symbol = num;\n          this.setState({\n            display: this.firstNum + this.symbol,\n            equation: this.firstNum + this.symbol\n          });\n          this.isFirstExpr = false;\n        }\n      }\n\n      if (this.isFirstExpr == false) {\n        if (result2 == null) {\n          this.secondNum = \"\" + this.secondNum + num;\n          this.setState({\n            display: this.firstNum + this.symbol + this.secondNum\n          });\n        }\n\n        this.isFirstExpr = false;\n      }\n\n      this.equation = this.firstNum + this.symbol + this.secondNum;\n      console.log(this.equation);\n      console.log(typeof this.equation);\n    };\n\n    this.handleClear = () => {\n      this.firstNum = \"\";\n      this.setState({\n        display: 0\n      });\n    };\n\n    this.handleConvert = () => {\n      let convert = parseFloat(this.firstNum);\n\n      if (this.convertNum == true) {\n        let toNeg = -Math.abs(convert);\n        toNeg = toNeg.toString();\n        this.convertNum = false;\n        this.firstNum = toNeg;\n        this.setState({\n          display: this.firstNum\n        });\n      } else {\n        let toPos = Math.abs(convert);\n        toPos = toPos.toString();\n        this.convertNum = true;\n        this.firstNum = toPos;\n        this.setState({\n          display: this.firstNum\n        });\n      }\n    };\n\n    this.handlePercent = () => {\n      let convert = parseFloat(this.firstNum);\n      let percent = convert / 100;\n      percent = percent.toString();\n      this.firstNum = percent;\n      this.setState({\n        display: this.firstNum\n      });\n    };\n\n    this.handleEqual = () => {\n      console.log(\"h\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calc-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.display)), React.createElement(\"button\", {\n      onClick: this.handleClear,\n      className: \"button text dark-grey clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      className: \"button text dark-grey negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"+/-\"), React.createElement(\"button\", {\n      onClick: this.handlePercent,\n      className: \"button text dark-grey percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"/\");\n      },\n      className: \"button text orange divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"/\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(7);\n      },\n      className: \"button text light-grey seven\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(8);\n      },\n      className: \"button text light-grey eight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(9);\n      },\n      className: \"button text light-grey nine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"*\");\n      },\n      className: \"button text orange multiply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(4);\n      },\n      className: \"button text light-grey four\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(5);\n      },\n      className: \"button text light-grey five\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(6);\n      },\n      className: \"button text light-grey six\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"-\");\n      },\n      className: \"button text orange subtract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(1);\n      },\n      className: \"button text light-grey one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(2);\n      },\n      className: \"button text light-grey two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(3);\n      },\n      className: \"button text light-grey three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"+\");\n      },\n      className: \"button text orange add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(0);\n      },\n      className: \"text light-grey zero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\".\");\n      },\n      className: \"button text light-grey decimal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \".\"), React.createElement(\"button\", {\n      onClick: this.handleEqual,\n      className: \"button text orange equals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"=\"));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js"],"names":["React","Component","Calculator","state","display","equation","firstNum","secondNum","convertNum","isFirstExpr","symbol","submit","num","regex","firstNumber","toString","secondNumber","result1","match","result2","setState","console","log","handleClear","handleConvert","convert","parseFloat","toNeg","Math","abs","toPos","handlePercent","percent","handleEqual","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass Calculator extends Component {\n  state = {\n    display: 0,\n    equation: \"\"\n  }\n\n  firstNum = \"\"\n  secondNum = \"\"\n  convertNum = true\n  isFirstExpr = true\n  equation = \"q\"\n  symbol = \"\"\n\n  submit = (num) => {\n    let regex = /[-+*\\/]/\n    let firstNumber = num.toString()\n    let secondNumber = num.toString()\n    let result1 = firstNumber.match(regex)\n    let result2 = secondNumber.match(regex)\n    \n    \n    if (this.isFirstExpr) {\n      if (result1 == null) {\n        this.firstNum = \"\" + this.firstNum + num\n        this.setState({\n          display: this.firstNum,\n        })\n      } else if (result1 !== null) {\n        this.symbol = num\n        this.setState({\n          display: this.firstNum + this.symbol,\n          equation: this.firstNum + this.symbol\n        })\n        this.isFirstExpr = false;\n      }\n    }\n\n    if (this.isFirstExpr == false) {\n      if (result2 == null) {\n        this.secondNum = \"\" + this.secondNum + num\n        this.setState({\n          display: this.firstNum + this.symbol + this.secondNum,\n        })\n      }   \n      this.isFirstExpr = false;\n    }\n    this.equation = this.firstNum + this.symbol + this.secondNum\n    console.log(this.equation)\n    console.log(typeof(this.equation))\n  }  \n\n  handleClear  = () => {\n    this.firstNum = \"\"\n    this.setState({\n      display: 0\n    })\n  }\n\n  handleConvert = () => {\n    let  convert = parseFloat(this.firstNum)\n    if (this.convertNum == true) {\n      let toNeg = -Math.abs(convert)\n      toNeg = toNeg.toString()\n      this.convertNum = false\n      this.firstNum = toNeg\n      this.setState({\n        display: this.firstNum\n      })\n    } else {\n      let toPos = Math.abs(convert)\n      toPos = toPos.toString()\n      this.convertNum = true\n      this.firstNum = toPos\n      this.setState({\n        display: this.firstNum\n      })\n    }    \n  }\n\n  handlePercent = () => {\n    let convert = parseFloat(this.firstNum)\n    let percent = convert / 100\n    percent = percent.toString()\n    this.firstNum = percent\n    this.setState({\n      display: this.firstNum\n    })\n  }\n\n  handleEqual = () => {\n    console.log(\"h\")\n  }\n  \n\n  render() {\n    return(\n      <div className=\"calc-container\">\n        <div className=\"display\">\n          <p>{this.state.display}</p>\n        </div>\n        <button onClick={this.handleClear} className=\"button text dark-grey clear\">C</button>\n        <button onClick={this.handleConvert} className=\"button text dark-grey negative\">+/-</button>\n        <button onClick={this.handlePercent} className=\"button text dark-grey percent\">%</button>\n        <button onClick={() => {this.submit(\"/\")}} className=\"button text orange divide\">/</button>\n        <button onClick={() => {this.submit(7)}} className=\"button text light-grey seven\">7</button>\n        <button onClick={() => {this.submit(8)}} className=\"button text light-grey eight\">8</button>\n        <button onClick={() => {this.submit(9)}} className=\"button text light-grey nine\">9</button>\n        <button onClick={() => {this.submit(\"*\")}} className=\"button text orange multiply\">X</button>\n        <button onClick={() => {this.submit(4)}} className=\"button text light-grey four\">4</button>\n        <button onClick={() => {this.submit(5)}} className=\"button text light-grey five\">5</button>\n        <button onClick={() => {this.submit(6)}} className=\"button text light-grey six\">6</button>\n        <button onClick={() => {this.submit(\"-\")}} className=\"button text orange subtract\">-</button>\n        <button onClick={() => {this.submit(1)}} className=\"button text light-grey one\">1</button>\n        <button onClick={() => {this.submit(2)}} className=\"button text light-grey two\">2</button>\n        <button onClick={() => {this.submit(3)}} className=\"button text light-grey three\">3</button>\n        <button onClick={() => {this.submit(\"+\")}} className=\"button text orange add\">+</button>\n        <button onClick={() => {this.submit(0)}} className=\"text light-grey zero\">0</button>\n        <button onClick={() => {this.submit(\".\")}} className=\"button text light-grey decimal\">.</button>\n        <button onClick={this.handleEqual} className=\"button text orange equals\">=</button>\n      </div>\n    )\n  }\n}\n\n  \nexport default Calculator\n\n"]},"metadata":{},"sourceType":"module"}