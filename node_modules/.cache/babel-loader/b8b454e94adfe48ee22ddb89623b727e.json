{"ast":null,"code":"var _jsxFileName = \"/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js\";\nimport React, { Component } from 'react';\nimport { isTSTypeOperator } from '@babel/types';\n\nclass Calculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      display: 0\n    };\n    this.firstNum = \"\";\n    this.secondNum = \"\";\n    this.convertNum = true;\n    this.convert2ndNum = true;\n    this.isFirstExpr = true;\n    this.equation = \"\";\n    this.symbol = \"\";\n\n    this.submit = num => {\n      let regex = /[-+*/]/;\n      let result1 = num.match(regex);\n      let result2 = num.match(regex);\n\n      if (this.isFirstExpr) {\n        if (result1 == null) {\n          this.firstNum = \"\" + this.firstNum + num;\n          this.setState({\n            display: this.firstNum\n          });\n        }\n\n        if (result1 !== null) {\n          this.symbol = num;\n          this.setState({\n            display: this.firstNum + this.symbol\n          });\n          this.isFirstExpr = false;\n        }\n      }\n\n      if (this.isFirstExpr === false) {\n        if (result2 == null) {\n          this.secondNum = \"\" + this.secondNum + num;\n          this.setState({\n            display: this.firstNum + this.symbol + this.secondNum\n          });\n        }\n\n        this.isFirstExpr = false;\n      }\n\n      this.equation = this.firstNum + this.symbol + this.secondNum;\n    };\n\n    this.handleClear = () => {\n      this.firstNum = \"\";\n      this.secondNum = \"\";\n      this.isFirstExpr = true;\n      this.convertNum = true;\n      this.convert2ndNum = true;\n      this.setState({\n        display: 0\n      });\n    };\n\n    this.handleConvert = () => {\n      if (this.firstNum === \"\") {\n        return;\n      }\n\n      let convert = parseFloat(this.firstNum);\n      let convert2nd = parseFloat(this.secondNum);\n\n      if (this.isFirstExpr) {\n        if (this.convertNum) {\n          let toNeg = -Math.abs(convert);\n          toNeg = toNeg.toString();\n          this.convertNum = false;\n          this.firstNum = toNeg;\n        } else {\n          let toPos = Math.abs(convert);\n          toPos = toPos.toString();\n          this.convertNum = true;\n          this.firstNum = toPos;\n        }\n\n        this.setState({\n          display: this.firstNum\n        });\n      } else {\n        if (this.convert2ndNum) {\n          let toNeg = -Math.abs(convert2nd);\n          toNeg = toNeg.toString();\n          this.convert2ndNum = false;\n          this.secondNum = toNeg;\n        } else {\n          let toPos = Math.abs(convert2nd);\n          toPos = toPos.toString();\n          this.convert2ndNum = true;\n          this.secondNum = toPos;\n        }\n\n        this.setState({\n          display: this.firstNum + this.symbol + \"(\" + this.secondNum + \")\"\n        });\n      }\n\n      this.equation = this.firstNum + this.symbol + this.secondNum;\n    };\n\n    this.handlePercent = () => {\n      if (this.firstNum === \"\") {\n        return;\n      }\n\n      let convert = parseFloat(this.firstNum);\n      let convert2nd = parseFloat(this.secondNum);\n      let percent = convert / 100;\n      let percent2nd = convert2nd / 100;\n\n      if (this.isFirstExpr) {\n        percent = percent.toString();\n        this.firstNum = percent;\n        this.setState({\n          display: this.firstNum\n        });\n      } else {\n        percent2nd = percent2nd.toString();\n        this.secondNum = percent2nd;\n        this.setState({\n          display: this.firstNum + this.symbol + this.secondNum\n        });\n      }\n\n      this.equation = this.firstNum + this.symbol + this.secondNum;\n    };\n\n    this.handleEqual = () => {\n      let result;\n      let numFirstNum = Number(this.firstNum);\n      let numSecondNum = Number(this.secondNum);\n\n      if (this.symbol = \"+\") {\n        result = numFirstNum + numSecondNum;\n      } else if (this.symbol = \"-\") {\n        result = numFirstNum - numSecondNum;\n      } else if (this.symbol = \"*\") {\n        result = numFirstNum * numSecondNum;\n      } else if (this.symbol = \"/\") {\n        result = numFirstNum / numSecondNum;\n      } //let result = eval(this.equation)\n\n\n      this.setState({\n        display: result\n      });\n      this.firstNum = result;\n      this.secondNum = \"\";\n      this.convertNum = true;\n      this.convert2ndNum = true;\n      this.isFirstExpr = true;\n      this.equation = \"\";\n      this.symbol = \"\";\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calc-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.display)), React.createElement(\"button\", {\n      onClick: this.handleClear,\n      className: \"button text dark-grey clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      className: \"button text dark-grey negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"+/-\"), React.createElement(\"button\", {\n      onClick: this.handlePercent,\n      className: \"button text dark-grey percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"/\");\n      },\n      className: \"button text orange divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"/\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"7\");\n      },\n      className: \"button text light-grey seven\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"8\");\n      },\n      className: \"button text light-grey eight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"9\");\n      },\n      className: \"button text light-grey nine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"*\");\n      },\n      className: \"button text orange multiply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"4\");\n      },\n      className: \"button text light-grey four\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"5\");\n      },\n      className: \"button text light-grey five\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"6\");\n      },\n      className: \"button text light-grey six\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"-\");\n      },\n      className: \"button text orange subtract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"1\");\n      },\n      className: \"button text light-grey one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"2\");\n      },\n      className: \"button text light-grey two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"3\");\n      },\n      className: \"button text light-grey three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"+\");\n      },\n      className: \"button text orange add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\"0\");\n      },\n      className: \"text light-grey zero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.submit(\".\");\n      },\n      className: \"button text light-grey decimal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \".\"), React.createElement(\"button\", {\n      onClick: this.handleEqual,\n      className: \"button text orange equals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"=\"));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/bmhan319/Desktop/reactjs_projects/calculator/src/Calculator.js"],"names":["React","Component","isTSTypeOperator","Calculator","state","display","firstNum","secondNum","convertNum","convert2ndNum","isFirstExpr","equation","symbol","submit","num","regex","result1","match","result2","setState","handleClear","handleConvert","convert","parseFloat","convert2nd","toNeg","Math","abs","toString","toPos","handlePercent","percent","percent2nd","handleEqual","result","numFirstNum","Number","numSecondNum","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { isTSTypeOperator } from '@babel/types';\n\nclass Calculator extends Component {\n  state = {\n    display: 0\n  }\n\n  firstNum = \"\"\n  secondNum = \"\"\n  convertNum = true\n  convert2ndNum = true\n  isFirstExpr = true\n  equation = \"\"\n  symbol = \"\"\n\n  submit = (num) => {\n    let regex = /[-+*/]/\n    let result1 = num.match(regex)\n    let result2 = num.match(regex)\n    \n    if (this.isFirstExpr) {\n      if (result1 == null) {\n        this.firstNum = \"\" + this.firstNum + num\n        this.setState({\n          display: this.firstNum,\n        })\n      } \n\n      if (result1 !== null) {\n        this.symbol = num\n        this.setState({\n          display: this.firstNum + this.symbol\n        })\n        this.isFirstExpr = false;\n      }\n    }\n\n    if (this.isFirstExpr === false) {\n      if (result2 == null) {\n        this.secondNum = \"\" + this.secondNum + num\n        this.setState({\n          display: this.firstNum + this.symbol + this.secondNum,\n        })\n      }   \n      this.isFirstExpr = false;\n    }\n    this.equation = this.firstNum + this.symbol + this.secondNum\n  }  \n\n  handleClear  = () => {\n    this.firstNum = \"\"\n    this.secondNum = \"\"\n    this.isFirstExpr = true\n    this.convertNum = true\n    this.convert2ndNum = true\n    this.setState({\n      display: 0\n    })\n  }\n\n  handleConvert = () => {\n    if (this.firstNum === \"\") {\n      return;\n    }\n    let  convert = parseFloat(this.firstNum)\n    let  convert2nd = parseFloat(this.secondNum)\n\n    if (this.isFirstExpr) {\n      if (this.convertNum) {\n        let toNeg = -Math.abs(convert)\n        toNeg = toNeg.toString()\n        this.convertNum = false\n        this.firstNum = toNeg\n      } else {\n        let toPos = Math.abs(convert)\n        toPos = toPos.toString()\n        this.convertNum = true\n        this.firstNum = toPos\n      }\n      this.setState({\n        display: this.firstNum\n      })\n    } else {\n      if (this.convert2ndNum) {\n        let toNeg = -Math.abs(convert2nd)\n        toNeg = toNeg.toString()\n        this.convert2ndNum = false\n        this.secondNum = toNeg\n      } else {\n        let toPos = Math.abs(convert2nd)\n        toPos = toPos.toString()\n        this.convert2ndNum = true\n        this.secondNum = toPos\n      }\n      this.setState({\n        display: this.firstNum + this.symbol + \"(\" + this.secondNum + \")\"\n      })\n    }\n    this.equation = this.firstNum + this.symbol + this.secondNum\n  }\n\n  handlePercent = () => {\n    if (this.firstNum === \"\") {\n      return;\n    }\n    let convert = parseFloat(this.firstNum)\n    let convert2nd = parseFloat(this.secondNum)\n    let percent = convert / 100\n    let percent2nd = convert2nd / 100\n\n    if (this.isFirstExpr) {\n      percent = percent.toString()\n      this.firstNum = percent\n      this.setState({\n        display: this.firstNum\n      })\n    } else {\n      percent2nd = percent2nd.toString()\n      this.secondNum = percent2nd\n      this.setState({\n        display: this.firstNum + this.symbol + this.secondNum\n      })\n    }\n    this.equation = this.firstNum + this.symbol + this.secondNum\n  }\n\n  handleEqual = () => {\n    let result;\n    let numFirstNum = Number(this.firstNum)\n    let numSecondNum = Number(this.secondNum)\n    if (this.symbol = \"+\") {\n      result = numFirstNum + numSecondNum\n    } else if (this.symbol = \"-\") {\n      result = numFirstNum - numSecondNum\n    } else if (this.symbol = \"*\") {\n      result = numFirstNum * numSecondNum\n    } else if (this.symbol = \"/\") {\n      result = numFirstNum / numSecondNum\n    }\n    \n\n    //let result = eval(this.equation)\n    this.setState({\n      display: result\n    })\n    this.firstNum = result\n    this.secondNum = \"\"\n    this.convertNum = true\n    this.convert2ndNum = true\n    this.isFirstExpr = true\n    this.equation = \"\"\n    this.symbol = \"\"\n  }\n  \n\n  render() {\n    return(\n      <div className=\"calc-container\">\n        <div className=\"display\">\n          <p>{this.state.display}</p>\n        </div>\n        <button onClick={this.handleClear} className=\"button text dark-grey clear\">C</button>\n        <button onClick={this.handleConvert} className=\"button text dark-grey negative\">+/-</button>\n        <button onClick={this.handlePercent} className=\"button text dark-grey percent\">%</button>\n        <button onClick={() => {this.submit(\"/\")}} className=\"button text orange divide\">/</button>\n        <button onClick={() => {this.submit(\"7\")}} className=\"button text light-grey seven\">7</button>\n        <button onClick={() => {this.submit(\"8\")}} className=\"button text light-grey eight\">8</button>\n        <button onClick={() => {this.submit(\"9\")}} className=\"button text light-grey nine\">9</button>\n        <button onClick={() => {this.submit(\"*\")}} className=\"button text orange multiply\">X</button>\n        <button onClick={() => {this.submit(\"4\")}} className=\"button text light-grey four\">4</button>\n        <button onClick={() => {this.submit(\"5\")}} className=\"button text light-grey five\">5</button>\n        <button onClick={() => {this.submit(\"6\")}} className=\"button text light-grey six\">6</button>\n        <button onClick={() => {this.submit(\"-\")}} className=\"button text orange subtract\">-</button>\n        <button onClick={() => {this.submit(\"1\")}} className=\"button text light-grey one\">1</button>\n        <button onClick={() => {this.submit(\"2\")}} className=\"button text light-grey two\">2</button>\n        <button onClick={() => {this.submit(\"3\")}} className=\"button text light-grey three\">3</button>\n        <button onClick={() => {this.submit(\"+\")}} className=\"button text orange add\">+</button>\n        <button onClick={() => {this.submit(\"0\")}} className=\"text light-grey zero\">0</button>\n        <button onClick={() => {this.submit(\".\")}} className=\"button text light-grey decimal\">.</button>\n        <button onClick={this.handleEqual} className=\"button text orange equals\">=</button>\n      </div>\n    )\n  }\n}\n\n  \nexport default Calculator\n\n"]},"metadata":{},"sourceType":"module"}